<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Solartisan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://solart.cc/"/>
  <updated>2016-06-20T05:33:57.000Z</updated>
  <id>http://solart.cc/</id>
  
  <author>
    <name>imilk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TurboRecyclerViewHelper之实现Adapter的优化封装</title>
    <link href="http://solart.cc/2016/06/18/turbo-recyclerview-helper-2/"/>
    <id>http://solart.cc/2016/06/18/turbo-recyclerview-helper-2/</id>
    <published>2016-06-18T05:52:08.000Z</published>
    <updated>2016-06-20T05:33:57.000Z</updated>
    
    <content type="html">&lt;p&gt;上次讲到&lt;a href=&quot;http://solart.cc/2016/06/01/turbo-recyclerview-helper-1/&quot;&gt;实现RecyclerView的功能扩展&lt;/a&gt;,本次就接着介绍针对&lt;code&gt;RecyclerView.Adapter&lt;/code&gt;的封装的一些想法。&lt;/p&gt;
&lt;h1 id=&quot;1-功能介绍&quot;&gt;&lt;a href=&quot;#1-功能介绍&quot; class=&quot;headerlink&quot; title=&quot;1. 功能介绍&quot;&gt;&lt;/a&gt;1. 功能介绍&lt;/h1&gt;&lt;p&gt;随着移动端的蓬勃发展，复杂的产品布局也变成了家常便饭，复杂的布局排列组合也成了常态。&lt;/p&gt;
&lt;img src=&quot;/images/home_model.png&quot;&gt;
&lt;p&gt;比如在拿到这个需求之后，如果放在之前我大多是用ScrollView或者ListView的多Type类型来实现。&lt;/p&gt;
&lt;p&gt;如今，采用&lt;code&gt;RecyclerView&lt;/code&gt;可以实现一个性能更优的方案，&lt;code&gt;RecyclerView&lt;/code&gt;提供了一种插拔式的架构设计，高度的解耦，异常的灵活，也因为这些特性需要调用者自己来实现的代码就相对多一些，所以这也激发了自己想进一步封装一个更好用并且不失灵活性的&lt;code&gt;Adapter&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当然，对于实现以上需求还配合了&lt;code&gt;ItemDecoration&lt;/code&gt;来实现间隔，这里就先按下不表。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;支持数据源的添加/删除/重置&lt;/li&gt;
&lt;li&gt;支持多类型布局&lt;/li&gt;
&lt;li&gt;添加/移除头部和尾部&lt;/li&gt;
&lt;li&gt;支持添加点击事件&lt;/li&gt;
&lt;li&gt;配合TurboRecyclerView上拉/左滑加载&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来，针对以上需求展开介绍。&lt;/p&gt;
&lt;h1 id=&quot;2-数据源的添加-删除-重置&quot;&gt;&lt;a href=&quot;#2-数据源的添加-删除-重置&quot; class=&quot;headerlink&quot; title=&quot;2. 数据源的添加/删除/重置&quot;&gt;&lt;/a&gt;2. 数据源的添加/删除/重置&lt;/h1&gt;&lt;p&gt;大家知道&lt;code&gt;RecyclerView.Adapter&lt;/code&gt;是RecyclerView与数据之间的桥梁，所以针对数据源我的想法是在Adapter中维护一个&lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt;，这样可以不依赖外部数据源，保证List&lt;t&gt;对Adapter的可见性，在Adapter的封装中仅提供增、删以及重置的方法，所有对数据源操作都通过Adapter中提供的接口来实现增删。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; List&amp;lt;T&amp;gt; mData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseTurboAdapter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, List&amp;lt;T&amp;gt; data)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mData = data == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;T&amp;gt;() : &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;T&amp;gt;(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/t&gt;&lt;/p&gt;
&lt;p&gt;下面我们来看看添加数据的接口：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T item)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isAdd = mData.add(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isAdd)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyItemInserted(mData.size() + getHeaderViewCount());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position, T item)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (position &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || position &amp;gt; mData.size()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;add position = &quot;&lt;/span&gt; + position + &lt;span class=&quot;string&quot;&gt;&quot;, IndexOutOfBounds, please check your code!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mData.add(position, item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notifyItemInserted(position + getHeaderViewCount());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(List&amp;lt;T&amp;gt; data)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mData.addAll(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notifyDataSetChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里需要提一下，针对add(postion,T)中的&lt;code&gt;position&lt;/code&gt;是整个Adapter中getItemCount()后需要减去头部的计数，后面会讲到。&lt;/p&gt;
&lt;p&gt;删除数据的接口与添加类似，就不在贴代码了，这里我们又提供一个重置数据的方法：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;resetData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(List&amp;lt;T&amp;gt; data)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mData.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addData(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一般有重新刷新时，请调用这个方法重置数据源。&lt;/p&gt;
&lt;h1 id=&quot;3-添加-移除头部和尾部&quot;&gt;&lt;a href=&quot;#3-添加-移除头部和尾部&quot; class=&quot;headerlink&quot; title=&quot;3. 添加/移除头部和尾部&quot;&gt;&lt;/a&gt;3. 添加/移除头部和尾部&lt;/h1&gt;&lt;p&gt;RecyclerView是一个性能更优的控件，所以对多布局的支持也更好。Header和Footer是配合getItemViewType(position)来实现，我们知道Header、Footer的特点，所以对于头部和尾部的Type类型处理如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mHeaderView != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; position == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; TYPE_HEADER_VIEW;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (position == mData.size() + getHeaderViewCount()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLoading) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFooterView != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; TYPE_FOOTER_VIEW;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;添加/移除头部和尾部会对&lt;code&gt;ItemCount&lt;/code&gt;有影响，所以我们需要实现getItemCount，先来看看源码上的注解。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Returns the total number of items in the data set hold by the adapter.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt; The total number of items in this adapter.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来看看具体的实现：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLoading) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//if loading ignore footer view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count = mData.size() + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + getHeaderViewCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count = mData.size() + getHeaderViewCount() + getFooterViewCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在数据源的基础上计算Header以及Footer的数量并返回。&lt;/p&gt;
&lt;p&gt;最后我们来看下针对Header添加、移除（Footer同理）：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; View mHeaderView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addHeaderView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View header)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (header == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;header is null!!!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mHeaderView = header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.notifyDataSetChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeHeaderView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mHeaderView != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mHeaderView = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.notifyDataSetChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;4-点击事件的处理&quot;&gt;&lt;a href=&quot;#4-点击事件的处理&quot; class=&quot;headerlink&quot; title=&quot;4. 点击事件的处理&quot;&gt;&lt;/a&gt;4. 点击事件的处理&lt;/h1&gt;&lt;p&gt;在刚开始写这个项目的初期，其实我期望是用一种更简洁的更优雅的方式来处理item点击事件，期间也尝试使用&lt;code&gt;RecyclerView.OnItemTouchListener&lt;/code&gt;来实现点击事件，虽然功能上实现了点击事件，但对点击效果的支持没能有效的解决，后来不得不放弃的这一方案。最终，这里还是通过itemView的点击事件来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vh = onCreateDefViewHolder(parent, viewType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatchItemClickListener(vh);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispatchItemClickListener&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; BaseViewHolder vh)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOnItemClickListeners != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; mOnItemClickListeners.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(vh.itemView &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; AdapterView)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            vh.itemView.setOnClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mOnItemClickListeners.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; OnItemClickListener listener = mOnItemClickListeners.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        listener.onItemClick(vh, vh.getLayoutPosition() - getHeaderViewCount());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOnItemLongClickListeners != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; mOnItemLongClickListeners.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(vh.itemView &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; AdapterView)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            vh.itemView.setOnLongClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnLongClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onLongClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mOnItemLongClickListeners.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; OnItemLongClickListener listener = mOnItemLongClickListeners.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        listener.onItemLongClick(vh, vh.getLayoutPosition() - getHeaderViewCount());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对&lt;code&gt;Adapter&lt;/code&gt;抽象封装代码上并不复杂，只是基于这些抽象及封装，使用起来更方便快捷。也欢迎支持一下&lt;a href=&quot;https://github.com/Solartisan/TurboRecyclerViewHelper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个项目&lt;/a&gt;~ 持续维护~😊&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;上次讲到&lt;a href=&quot;http://solart.cc/2016/06/01/turbo-recyclerview-helper-1/&quot;&gt;实现RecyclerView的功能扩展&lt;/a&gt;,本次就接着介绍针对&lt;code&gt;RecyclerView.Adapter&lt;/code&gt;的封装的一些想法。&lt;/p&gt;
&lt;h1 id=&quot;1-功能介绍&quot;&gt;&lt;a href=&quot;#1-功能介绍&quot; class=&quot;headerlink&quot; title=&quot;1. 功能介绍&quot;&gt;&lt;/a&gt;1. 功能介绍&lt;/h1&gt;&lt;p&gt;随着移动端的蓬勃发展，复杂的产品布局也变成了家常便饭，复杂的布局排列组合也成了常态。&lt;/p&gt;
&lt;img src=&quot;/images/home_model.png&quot;&gt;
&lt;p&gt;比如在拿到这个需求之后，如果放在之前我大多是用ScrollView或者ListView的多Type类型来实现。&lt;/p&gt;
&lt;p&gt;如今，采用&lt;code&gt;RecyclerView&lt;/code&gt;可以实现一个性能更优的方案，&lt;code&gt;RecyclerView&lt;/code&gt;提供了一种插拔式的架构设计，高度的解耦，异常的灵活，也因为这些特性需要调用者自己来实现的代码就相对多一些，所以这也激发了自己想进一步封装一个更好用并且不失灵活性的&lt;code&gt;Adapter&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当然，对于实现以上需求还配合了&lt;code&gt;ItemDecoration&lt;/code&gt;来实现间隔，这里就先按下不表。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://solart.cc/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>TurboRecyclerViewHelper之实现RecyclerView的功能扩展</title>
    <link href="http://solart.cc/2016/06/01/turbo-recyclerview-helper-1/"/>
    <id>http://solart.cc/2016/06/01/turbo-recyclerview-helper-1/</id>
    <published>2016-06-01T10:06:08.000Z</published>
    <updated>2016-06-03T05:11:15.000Z</updated>
    
    <content type="html">&lt;p&gt;自从使用了&lt;code&gt;RecyclerView&lt;/code&gt;再也回不去了，什么ListView、GridView统统让他们退休了。必须安利起来，用了才能体会它的神奇！&lt;/p&gt;
&lt;p&gt;根据使用&lt;code&gt;RecyclerView&lt;/code&gt;以来，拓展的一些功能及对&lt;code&gt;RecyclerView.Adapter&lt;/code&gt;的封装，想在这里跟大家分享一些经验，还望指正。&lt;/p&gt;
&lt;h1 id=&quot;1-功能介绍&quot;&gt;&lt;a href=&quot;#1-功能介绍&quot; class=&quot;headerlink&quot; title=&quot;1. 功能介绍&quot;&gt;&lt;/a&gt;1. 功能介绍&lt;/h1&gt;&lt;p&gt;基于对&lt;code&gt;RecyclerView&lt;/code&gt;在使用过程中的一些痛点写了这个开源项目 &lt;a href=&quot;https://github.com/Solartisan/TurboRecyclerViewHelper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TurboRecyclerViewHelper&lt;/a&gt; 。功能点详见README。&lt;/p&gt;
&lt;img src=&quot;/images/turbo_simple.gif&quot;&gt;
&lt;p&gt;本次主要介绍针对&lt;code&gt;TurboRecyclerView&lt;/code&gt;上拉/左滑的功能的实现及思路。&lt;/p&gt;
&lt;p&gt;下面直接进入正题…&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;2-状态分析&quot;&gt;&lt;a href=&quot;#2-状态分析&quot; class=&quot;headerlink&quot; title=&quot;2. 状态分析&quot;&gt;&lt;/a&gt;2. 状态分析&lt;/h1&gt;&lt;p&gt;以上拉加载的过程作为本次分享的一个栗子(左滑同理)。状态如下图：&lt;/p&gt;
&lt;img src=&quot;/images/turbo_state_analysis.png&quot;&gt;
&lt;p&gt;我们所关心的是RecyclerView滑动到底部的状态，这个状态下是我们需要处理的&lt;code&gt;临界状态&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下文中出现的代码均为精简后的代码片段，本文重在介绍思路，所涉及的知识点假设您已经掌握，故不再展开赘述。&lt;/p&gt;
&lt;h1 id=&quot;3-临界状态的限制条件&quot;&gt;&lt;a href=&quot;#3-临界状态的限制条件&quot; class=&quot;headerlink&quot; title=&quot;3. 临界状态的限制条件&quot;&gt;&lt;/a&gt;3. 临界状态的限制条件&lt;/h1&gt;&lt;p&gt;废话不多说直接看代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mLoadEnabled || canScrollEnd() || mIsLoading || isEmpty()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;...;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们从两个方面来分析可以开始处理Touch事件的条件：&lt;/p&gt;
&lt;h2 id=&quot;3-1-客观条件&quot;&gt;&lt;a href=&quot;#3-1-客观条件&quot; class=&quot;headerlink&quot; title=&quot;3.1 客观条件&quot;&gt;&lt;/a&gt;3.1 客观条件&lt;/h2&gt;&lt;p&gt;所谓客观条件即是RecyclerView滑动到底部的这个状态的物理状态，体现在代码上就是&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;canScrollEnd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//判断在纵向是否还能向上滑动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ViewCompat.canScrollVertically(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里为了简化只判断了纵向是否可以向下滑动，实际代码中这里是判断条件为&lt;code&gt;ViewCompat.canScrollVertically(this, 1) || ViewCompat.canScrollHorizontally(this, 1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个条件返回值如果是false，则代表我们可以从这个临界状态开始处理Touch事件，否则不处理。&lt;/p&gt;
&lt;h2 id=&quot;3-2-逻辑条件（主观条件）&quot;&gt;&lt;a href=&quot;#3-2-逻辑条件（主观条件）&quot; class=&quot;headerlink&quot; title=&quot;3.2 逻辑条件（主观条件）&quot;&gt;&lt;/a&gt;3.2 逻辑条件（主观条件）&lt;/h2&gt;&lt;p&gt;逻辑条件（或者称为主观条件）是设计控件本身所考虑的限制条件。&lt;/p&gt;
&lt;p&gt;判断条件如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//是否允许上拉 || 是否正处于刷新状态 || 是否处理空状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mLoadEnabled || mIsLoading || isEmpty())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在以上条件下我们认为是控件本身应处于不可上拉的状态，我们不做处理。&lt;/p&gt;
&lt;h1 id=&quot;4-Touch事件的处理&quot;&gt;&lt;a href=&quot;#4-Touch事件的处理&quot; class=&quot;headerlink&quot; title=&quot;4. Touch事件的处理&quot;&gt;&lt;/a&gt;4. Touch事件的处理&lt;/h1&gt;&lt;p&gt;在同时满足客观条件和逻辑条件下，我们就可以开始处理上拉的效果。&lt;/p&gt;
&lt;h2 id=&quot;4-1-记录初始值&quot;&gt;&lt;a href=&quot;#4-1-记录初始值&quot; class=&quot;headerlink&quot; title=&quot;4.1 记录初始值&quot;&gt;&lt;/a&gt;4.1 记录初始值&lt;/h2&gt;&lt;p&gt;我们需要在&lt;code&gt;MotionEvent.ACTION_DOWN&lt;/code&gt; &lt;code&gt;MotionEvent.ACTION_POINTER_DOWN&lt;/code&gt;时记录初始值:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mInitialMotionX = getMotionEventX(e, actionIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mInitialMotionY = getMotionEventY(e, actionIndex);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;4-2-判断滑动是否符合预期值&quot;&gt;&lt;a href=&quot;#4-2-判断滑动是否符合预期值&quot; class=&quot;headerlink&quot; title=&quot;4.2 判断滑动是否符合预期值&quot;&gt;&lt;/a&gt;4.2 判断滑动是否符合预期值&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;MotionEvent.ACTION_MOVE&lt;/code&gt;时判断是否是上拉的状态：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//LayoutManager中提供的判断是否纵向可以滑动的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; canScrollVertically = getLayoutManager().canScrollVertically();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = getMotionEventY(e, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; deltaY = y - mInitialMotionY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canScrollVertically &amp;amp;&amp;amp; Math.abs(deltaY) &amp;gt; mTouchSlop &amp;amp;&amp;amp; deltaY &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123; ... &lt;span class=&quot;comment&quot;&gt;//处理上拉效果&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;记录当前Y值，且判断是否手指在上滑状态。&lt;/p&gt;
&lt;h2 id=&quot;4-3-实现上拉效果&quot;&gt;&lt;a href=&quot;#4-3-实现上拉效果&quot; class=&quot;headerlink&quot; title=&quot;4.3 实现上拉效果&quot;&gt;&lt;/a&gt;4.3 实现上拉效果&lt;/h2&gt;&lt;p&gt;在自定义控件中，实现上拉效果有多种途径，例如大家常用的利用&lt;code&gt;Scroller&lt;/code&gt;配合&lt;code&gt;scrollTo&lt;/code&gt;来实现滑动，但是在RecyclerView的实现中并不支持这种方式。这个方案Close!&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scrollTo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Log.w(TAG, &lt;span class=&quot;string&quot;&gt;&quot;RecyclerView does not support scrolling to an absolute position. &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;Use scrollToPosition instead&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里采用&lt;code&gt;setTranslationY&lt;/code&gt;来实现上拉效果，根据手指移动的距离计算出移动距离来改变RecyclerView的位置。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; targetEnd = -dampAxis(deltaY); &lt;span class=&quot;comment&quot;&gt;//阻尼值的计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setTranslationY(targetEnd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//消费掉此事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到这里上拉的效果已经实现完毕。&lt;/p&gt;
&lt;h2 id=&quot;4-4-复位及刷新&quot;&gt;&lt;a href=&quot;#4-4-复位及刷新&quot; class=&quot;headerlink&quot; title=&quot;4.4 复位及刷新&quot;&gt;&lt;/a&gt;4.4 复位及刷新&lt;/h2&gt;&lt;p&gt;距离成功只差一点点。&lt;br&gt;在用户手指松开以后，我们要考虑做两件事：RecyclerView的复位及是否可以处于刷新状态。&lt;br&gt;针对复位操作，我们只需要逆向&lt;code&gt;setTranslationY&lt;/code&gt;值即可。这里我们采用属性动画来实现&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;animateOffsetToEnd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String propertyName, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Interpolator interpolator, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;... value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mResetAnimator == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           mResetAnimator = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectAnimator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           mResetAnimator.setTarget(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mResetAnimator.cancel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mResetAnimator.setPropertyName(propertyName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mResetAnimator.setFloatValues(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mResetAnimator.setInterpolator(interpolator);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mResetAnimator.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(canScrollVertically)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	animateOffsetToEnd(&lt;span class=&quot;string&quot;&gt;&quot;translationY&quot;&lt;/span&gt;, mInterpolator, &lt;span class=&quot;number&quot;&gt;0f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对于刷新我们要做的事情也比较简单，判断当前移动距离达到阈值后，回调监听事件并显示LOAING_VIEW。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;refreshing...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mIsLoading = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatchOnLoadingMoreListeners();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;smoothScrollToPosition(mLastVisibleItemPosition + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;刷新完毕后，记得通知TurboRecyclerView更新状态哦！&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mTurboRecyclerView.addOnLoadingMoreListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnLoadMoreListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onLoadingMore&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           handler.postDelayed(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   mRecyclerView.loadMoreComplete(Arrays.asList(sCheeseStrings));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此整个上拉到复位刷新的过程完成。&lt;br&gt;完整代码详见 &lt;a href=&quot;https://github.com/Solartisan/TurboRecyclerViewHelper/blob/master/turbo-recyclerview-helper/src/main/java/cc/solart/turbo/TurboRecyclerView.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TurboRecyclerView.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;希望我的分享能让您能有所收获。也欢迎支持一下&lt;a href=&quot;https://github.com/Solartisan/TurboRecyclerViewHelper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个项目&lt;/a&gt;~ 持续维护~&lt;/p&gt;
&lt;p&gt;下次准备介绍一下对&lt;code&gt;RecyclerView.Adapter&lt;/code&gt;的封装，还请关注！😊&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;自从使用了&lt;code&gt;RecyclerView&lt;/code&gt;再也回不去了，什么ListView、GridView统统让他们退休了。必须安利起来，用了才能体会它的神奇！&lt;/p&gt;
&lt;p&gt;根据使用&lt;code&gt;RecyclerView&lt;/code&gt;以来，拓展的一些功能及对&lt;code&gt;RecyclerView.Adapter&lt;/code&gt;的封装，想在这里跟大家分享一些经验，还望指正。&lt;/p&gt;
&lt;h1 id=&quot;1-功能介绍&quot;&gt;&lt;a href=&quot;#1-功能介绍&quot; class=&quot;headerlink&quot; title=&quot;1. 功能介绍&quot;&gt;&lt;/a&gt;1. 功能介绍&lt;/h1&gt;&lt;p&gt;基于对&lt;code&gt;RecyclerView&lt;/code&gt;在使用过程中的一些痛点写了这个开源项目 &lt;a href=&quot;https://github.com/Solartisan/TurboRecyclerViewHelper&quot;&gt;TurboRecyclerViewHelper&lt;/a&gt; 。功能点详见README。&lt;/p&gt;
&lt;img src=&quot;/images/turbo_simple.gif&quot;&gt;
&lt;p&gt;本次主要介绍针对&lt;code&gt;TurboRecyclerView&lt;/code&gt;上拉/左滑的功能的实现及思路。&lt;/p&gt;
&lt;p&gt;下面直接进入正题…&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://solart.cc/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android代码规范</title>
    <link href="http://solart.cc/2016/05/14/code-specification/"/>
    <id>http://solart.cc/2016/05/14/code-specification/</id>
    <published>2016-05-14T03:19:20.000Z</published>
    <updated>2016-05-14T06:04:57.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h1&gt;&lt;p&gt;本文档主要用于帮助Android开发人员规范代码及资源文件命名等，使大家尽量保证一个整洁的编程风格。&lt;/p&gt;
&lt;h1 id=&quot;二、Java命名规范&quot;&gt;&lt;a href=&quot;#二、Java命名规范&quot; class=&quot;headerlink&quot; title=&quot;二、Java命名规范&quot;&gt;&lt;/a&gt;二、Java命名规范&lt;/h1&gt;&lt;p&gt;本命名规范主要基于&lt;code&gt;骆驼命名&lt;/code&gt;规则(对于这个都保证不了的代码简直不能忍)。&lt;/p&gt;
&lt;h2 id=&quot;2-1-不要使用拼音命，避免使用缩写&quot;&gt;&lt;a href=&quot;#2-1-不要使用拼音命，避免使用缩写&quot; class=&quot;headerlink&quot; title=&quot;2.1 不要使用拼音命，避免使用缩写&quot;&gt;&lt;/a&gt;2.1 不要使用拼音命，避免使用缩写&lt;/h2&gt;&lt;p&gt;# 所有的名称命名应该&lt;code&gt;简洁而富有意义&lt;/code&gt;，尽量使用完整单词。增加必要的注释。&lt;/p&gt;
&lt;p&gt;# &lt;code&gt;除非该缩写被更广泛的使用&lt;/code&gt;，例如URL、HTML。&lt;/p&gt;
&lt;h2 id=&quot;2-2-包的命名&quot;&gt;&lt;a href=&quot;#2-2-包的命名&quot; class=&quot;headerlink&quot; title=&quot;2.2 包的命名&quot;&gt;&lt;/a&gt;2.2 包的命名&lt;/h2&gt;&lt;p&gt;# &lt;code&gt;包名由小写的字母组成&lt;/code&gt;，例如以 cc.solart.&amp;lt;业务模块名&amp;gt;.&amp;lt;子模块名&amp;gt;命名&lt;/p&gt;
&lt;p&gt;# 一个模块是一个功能相对独立的模块，&lt;code&gt;应谨慎创建新的模块名&lt;/code&gt; &lt;/p&gt;
&lt;h2 id=&quot;2-3-类的命名&quot;&gt;&lt;a href=&quot;#2-3-类的命名&quot; class=&quot;headerlink&quot; title=&quot;2.3 类的命名&quot;&gt;&lt;/a&gt;2.3 类的命名&lt;/h2&gt;&lt;p&gt;# &lt;code&gt;类名的首字母必须大写&lt;/code&gt;，如果由多个单词组成，多个单词直接连接，&lt;code&gt;每个单词的首字母必须大写，其他字母小写&lt;/code&gt;。例如：public class LoginActivity &lt;/p&gt;
&lt;p&gt;# 类的域定义考量, 非公开类不要用public&lt;code&gt;(注意类的有效作用域)&lt;/code&gt; &lt;/p&gt;
&lt;h2 id=&quot;2-4-抽象类、接口的命名&quot;&gt;&lt;a href=&quot;#2-4-抽象类、接口的命名&quot; class=&quot;headerlink&quot; title=&quot;2.4 抽象类、接口的命名&quot;&gt;&lt;/a&gt;2.4 抽象类、接口的命名&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;# 对于抽象类，&lt;code&gt;职责比较单一的以Abs开头&lt;/code&gt;，例如:AbsJsonRequest，只包含单一的网络请求；&lt;code&gt;对于一些基类抽象封装一般采用Base开头&lt;/code&gt;，例如BaseActivity。&lt;/p&gt;
&lt;p&gt;# 对于有明显接口特征的接口(如后缀含有Listener/Observer)，参考类命名规范即可，例如：public interface ResponseListener。&lt;/p&gt;
&lt;p&gt;# &lt;code&gt;对于没有明显接口特征的接口命名，首字母统一为大写 I&lt;/code&gt;，其它单词首字母大写, 例如:public interface ILocation。&lt;/p&gt;
&lt;h2 id=&quot;2-5-方法及参数的命名&quot;&gt;&lt;a href=&quot;#2-5-方法及参数的命名&quot; class=&quot;headerlink&quot; title=&quot;2.5 方法及参数的命名&quot;&gt;&lt;/a&gt;2.5 方法及参数的命名&lt;/h2&gt;&lt;p&gt;# &lt;code&gt;方法名的首字母必须小写&lt;/code&gt;，遵循驼峰命名。public void checkAuthToken()&lt;/p&gt;
&lt;p&gt;# 方法参数名以该参数功能命名，格式同方法名命名规则相同。 public void checkAuthToken(String token)&lt;/p&gt;
&lt;h2 id=&quot;2-6-常量的命名&quot;&gt;&lt;a href=&quot;#2-6-常量的命名&quot; class=&quot;headerlink&quot; title=&quot;2.6 常量的命名&quot;&gt;&lt;/a&gt;2.6 常量的命名&lt;/h2&gt;&lt;p&gt;# &lt;code&gt;用 final static 修饰，名称都大写&lt;/code&gt;，多个单词以下划线 “_” 连接，如:public final static String HTTP_HOST = “&lt;a href=&quot;http://127.0.0.1:8080/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8080/&lt;/a&gt;“; 。&lt;/p&gt;
&lt;h2 id=&quot;2-7-变量的命名&quot;&gt;&lt;a href=&quot;#2-7-变量的命名&quot; class=&quot;headerlink&quot; title=&quot;2.7 变量的命名&quot;&gt;&lt;/a&gt;2.7 变量的命名&lt;/h2&gt;&lt;p&gt;# &lt;code&gt;非 static 的成员变量，命名必须写&amp;#39;m&amp;#39;前缀&lt;/code&gt;，如：public Handler mHandler; &lt;/p&gt;
&lt;p&gt;# &lt;code&gt;static修饰的成员变量，命名必须写&amp;#39;s&amp;#39;前缀&lt;/code&gt;，如：public static String sAppKey; &lt;/p&gt;
&lt;p&gt;# &lt;code&gt;枚举变量使用用&amp;#39;e&amp;#39;前缀&lt;/code&gt;，如 private Weekday eWeekday;&lt;/p&gt;
&lt;p&gt;# &lt;code&gt;局部变量命名首字母小写即可&lt;/code&gt;，采用驼峰命名，如Context context;  &lt;/p&gt;
&lt;h1 id=&quot;三、Android资源文件命名规则&quot;&gt;&lt;a href=&quot;#三、Android资源文件命名规则&quot; class=&quot;headerlink&quot; title=&quot;三、Android资源文件命名规则&quot;&gt;&lt;/a&gt;三、Android资源文件命名规则&lt;/h1&gt;&lt;p&gt;规范资源文件命名，统一风格。&lt;/p&gt;
&lt;h2 id=&quot;3-1-文件命名&quot;&gt;&lt;a href=&quot;#3-1-文件命名&quot; class=&quot;headerlink&quot; title=&quot;3.1 文件命名&quot;&gt;&lt;/a&gt;3.1 文件命名&lt;/h2&gt;&lt;p&gt;# res/layout目录下文件:统一以布局类型开头，用小写和下划线”_”组合命名，如：首页 xml 布局文件: 例如:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;activity_home.xml &lt;span class=&quot;comment&quot;&gt;# HomeActivity页面布局&lt;/span&gt;
 fragment_account.xml &lt;span class=&quot;comment&quot;&gt;# AccountFragment布局&lt;/span&gt;
 item_tips.xml &lt;span class=&quot;comment&quot;&gt;# Adapter item布局&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;# res/drawable目录下文件:统一用小写加下划线”_”组合命名，同上，每个资源文件加前缀以便区分用途。如:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#13;bg_selector_normal.xml&amp;#10;&amp;#13;icon_submit_default.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-2-资源ID命名&quot;&gt;&lt;a href=&quot;#3-2-资源ID命名&quot; class=&quot;headerlink&quot; title=&quot;3.2 资源ID命名&quot;&gt;&lt;/a&gt;3.2 资源ID命名&lt;/h2&gt;&lt;p&gt;# @id/@+id &lt;code&gt;名称的必须全部小写，单词之间用下划线隔开&lt;/code&gt;，名称不需要复杂的层级定位，只要准确描述所代表控件的功能作用即可，在名称&lt;code&gt;使用当前控件类型的缩写作为前缀&lt;/code&gt;。例如：@+id/tv_name。&lt;/p&gt;
&lt;p&gt;# res/values/demins: 统一用小写加下划线”_“组合命名，定义距离通用值，定义字体大小通用值，其他颜色统一用sp/dp_&amp;lt;数值&amp;gt;表示。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;activity_horizontal_margin&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;activity_vertical_margin&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;fab_margin&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;app_bar_height&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;180dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;dp_1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;dp_2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;dp_3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;3dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;dp_4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;4dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;dp_5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;5dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;dp_16&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dimen&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;# res/values/colors: 统一用小写加下划线”_“组合命名，定义通用的背景色bg_color，定义字体通用色值，其他颜色统一用app_&amp;lt;色值&amp;gt;表示。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--载体颜色--&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bg_color&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;#E5E5E5&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&amp;gt;&lt;/span&gt;    
 &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--Material design color--&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--正常字体87%透明黑色--&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font_color_normal_black_87&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;#DD000000&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--正常字体54%透明黑色--&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font_color_light_black_54&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;#89000000&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--不可用状态使用的颜色26%透明--&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font_color_enable_black_26&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;#42000000&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--其他非通用色值 采用app_&amp;lt;小写色值编码&amp;gt;命名即可，value色值字母大写--&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app_d2322a&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;#FFD2322A&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app_f36754&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;#FFF36754&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app_d4503e&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;#FFD4503E&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;四、编码风格&quot;&gt;&lt;a href=&quot;#四、编码风格&quot; class=&quot;headerlink&quot; title=&quot;四、编码风格&quot;&gt;&lt;/a&gt;四、编码风格&lt;/h1&gt;&lt;h2 id=&quot;4-1-一般性说明&quot;&gt;&lt;a href=&quot;#4-1-一般性说明&quot; class=&quot;headerlink&quot; title=&quot;4.1 一般性说明&quot;&gt;&lt;/a&gt;4.1 一般性说明&lt;/h2&gt;&lt;p&gt;# &lt;code&gt;方法体行数不得超过 40 行&lt;/code&gt;(一般来说40行绝对够用，且易于维护)；&lt;br&gt;# 除去缩进长度，&lt;code&gt;单行长度不得超过 100 个字符&lt;/code&gt;；&lt;br&gt;# &lt;code&gt;圈复杂度不能超过 2 层&lt;/code&gt;；&lt;br&gt;# 单个文件长度一般不超过 1500 行(第三方代码除外)；&lt;br&gt;# 公开 API 中所有参数都必须进行有效性验证；&lt;br&gt;# 每次代码提交之前必须删除大量无效代码，去除无用的类import；&lt;br&gt;# &lt;code&gt;使用第三方API增加异常捕获&lt;/code&gt;，降低使用风险。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h1&gt;&lt;p&gt;本文档主要用于帮助Android开发人员规范代码及资源文件命名等，使大家尽量保证一个整洁的编程风格。&lt;/p&gt;
&lt;h1 id=&quot;二、Java命名规范&quot;&gt;&lt;a href=&quot;#二、Java命名规范&quot; class=&quot;headerlink&quot; title=&quot;二、Java命名规范&quot;&gt;&lt;/a&gt;二、Java命名规范&lt;/h1&gt;&lt;p&gt;本命名规范主要基于&lt;code&gt;骆驼命名&lt;/code&gt;规则(对于这个都保证不了的代码简直不能忍)。&lt;/p&gt;
&lt;h2 id=&quot;2-1-不要使用拼音命，避免使用缩写&quot;&gt;&lt;a href=&quot;#2-1-不要使用拼音命，避免使用缩写&quot; class=&quot;headerlink&quot; title=&quot;2.1 不要使用拼音命，避免使用缩写&quot;&gt;&lt;/a&gt;2.1 不要使用拼音命，避免使用缩写&lt;/h2&gt;&lt;p&gt;# 所有的名称命名应该&lt;code&gt;简洁而富有意义&lt;/code&gt;，尽量使用完整单词。增加必要的注释。&lt;/p&gt;
&lt;p&gt;# &lt;code&gt;除非该缩写被更广泛的使用&lt;/code&gt;，例如URL、HTML。&lt;/p&gt;
&lt;h2 id=&quot;2-2-包的命名&quot;&gt;&lt;a href=&quot;#2-2-包的命名&quot; class=&quot;headerlink&quot; title=&quot;2.2 包的命名&quot;&gt;&lt;/a&gt;2.2 包的命名&lt;/h2&gt;&lt;p&gt;# &lt;code&gt;包名由小写的字母组成&lt;/code&gt;，例如以 cc.solart.&amp;lt;业务模块名&amp;gt;.&amp;lt;子模块名&amp;gt;命名&lt;/p&gt;
&lt;p&gt;# 一个模块是一个功能相对独立的模块，&lt;code&gt;应谨慎创建新的模块名&lt;/code&gt; &lt;/p&gt;
&lt;h2 id=&quot;2-3-类的命名&quot;&gt;&lt;a href=&quot;#2-3-类的命名&quot; class=&quot;headerlink&quot; title=&quot;2.3 类的命名&quot;&gt;&lt;/a&gt;2.3 类的命名&lt;/h2&gt;&lt;p&gt;# &lt;code&gt;类名的首字母必须大写&lt;/code&gt;，如果由多个单词组成，多个单词直接连接，&lt;code&gt;每个单词的首字母必须大写，其他字母小写&lt;/code&gt;。例如：public class LoginActivity &lt;/p&gt;
&lt;p&gt;# 类的域定义考量, 非公开类不要用public&lt;code&gt;(注意类的有效作用域)&lt;/code&gt; &lt;/p&gt;
&lt;h2 id=&quot;2-4-抽象类、接口的命名&quot;&gt;&lt;a href=&quot;#2-4-抽象类、接口的命名&quot; class=&quot;headerlink&quot; title=&quot;2.4 抽象类、接口的命名&quot;&gt;&lt;/a&gt;2.4 抽象类、接口的命名&lt;/h2&gt;
    
    </summary>
    
      <category term="Android" scheme="http://solart.cc/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android WebView加载html5及JS交互框架</title>
    <link href="http://solart.cc/2016/03/25/open-web/"/>
    <id>http://solart.cc/2016/03/25/open-web/</id>
    <published>2016-03-25T08:06:04.000Z</published>
    <updated>2016-05-14T03:16:38.000Z</updated>
    
    <content type="html">&lt;p&gt;当前越来越多的app中嵌入H5，想跟大家分享一下具体在项目中的使用和设计，故写了这个&lt;a href=&quot;https://github.com/Solartisan/OpenWeb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开源项目&lt;/a&gt;，欢迎大家批评指正。&lt;/p&gt;
&lt;p&gt;在这里介绍一下OpenWeb项目基础的框架设计。&lt;/p&gt;
&lt;h1 id=&quot;1-功能介绍&quot;&gt;&lt;a href=&quot;#1-功能介绍&quot; class=&quot;headerlink&quot; title=&quot;1.功能介绍&quot;&gt;&lt;/a&gt;1.功能介绍&lt;/h1&gt;&lt;p&gt;基于WebView设计的H5页面的加载框架，可以自动管理回退栈，可以支持js与native的交互，可配合下拉刷新控件，可修改横向进度条。&lt;/p&gt;
&lt;h1 id=&quot;2-设计&quot;&gt;&lt;a href=&quot;#2-设计&quot; class=&quot;headerlink&quot; title=&quot;2.设计&quot;&gt;&lt;/a&gt;2.设计&lt;/h1&gt;&lt;img src=&quot;/images/open_web.png&quot;&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;3-核心类功能介绍&quot;&gt;&lt;a href=&quot;#3-核心类功能介绍&quot; class=&quot;headerlink&quot; title=&quot;3.核心类功能介绍&quot;&gt;&lt;/a&gt;3.核心类功能介绍&lt;/h1&gt;&lt;h2 id=&quot;3-1-WebUrl-java&quot;&gt;&lt;a href=&quot;#3-1-WebUrl-java&quot; class=&quot;headerlink&quot; title=&quot;3.1 WebUrl.java&quot;&gt;&lt;/a&gt;3.1 WebUrl.java&lt;/h2&gt;&lt;p&gt;定义了&lt;code&gt;String getCurrentUrl()&lt;/code&gt;接口，获取当前页面的的URL，用于记录当前页面的js回调注册。&lt;/p&gt;
&lt;h2 id=&quot;3-2-BaseWebEvent-java&quot;&gt;&lt;a href=&quot;#3-2-BaseWebEvent-java&quot; class=&quot;headerlink&quot; title=&quot;3.2 BaseWebEvent.java&quot;&gt;&lt;/a&gt;3.2 BaseWebEvent.java&lt;/h2&gt;&lt;p&gt;该类主要封装了基础的&lt;code&gt;@JavascriptInterface&lt;/code&gt;接口，Handler消息常量定义及js的回调注册。&lt;/p&gt;
&lt;p&gt;构造函数如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseWebEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, Handler handler, WebUrl url)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mContext = context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mHandler = handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mListener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mUrlSource = url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Handler消息封装如下，用于&lt;code&gt;@JavascriptInterface&lt;/code&gt;接口发送消息处理：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; what&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; obj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendAsyncCallbackMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; what, Object obj)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendAsyncCallbackMessageDelay(what,obj,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; what&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; obj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; delay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendAsyncCallbackMessageDelay&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; what, Object obj,&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; delay)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mHandler != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Message msg = mHandler.obtainMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         msg.what = what;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         msg.obj = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mHandler.sendMessageDelayed(msg,delay);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-3-BaseWebFragment-java&quot;&gt;&lt;a href=&quot;#3-3-BaseWebFragment-java&quot; class=&quot;headerlink&quot; title=&quot;3.3 BaseWebFragment.java&quot;&gt;&lt;/a&gt;3.3 BaseWebFragment.java&lt;/h2&gt;&lt;p&gt;这个类为抽象类是主要的WebView承载类，内部定义了WebView及BaseWebEvent及网络状态变化的监听等。&lt;/p&gt;
&lt;p&gt;WebView的&lt;code&gt;Settings&lt;/code&gt;配置，主要针对WebView做基础的设置，&lt;code&gt;WebChromeClient&lt;/code&gt;,&lt;code&gt;WebViewClient&lt;/code&gt;设置，以及对下载监听的设置：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onInitWebViewSettings&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//这里设置了基础的Settings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WebSettingsUtil.initSettings(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mActivity, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mWebView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WebChromeClient webChromeClient = onCreateWebChromeClient();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (webChromeClient != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mWebView.setWebChromeClient(webChromeClient);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WebViewClient webViewClient = onCreateWebViewClient();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (webViewClient != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mWebView.setWebViewClient(webViewClient);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWebView.setOverScrollMode(View.OVER_SCROLL_NEVER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWebView.requestFocus();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWebView.setDownloadListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebDownloadListener(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在子类的实现中应该覆写以下两个方法用于&lt;code&gt;WebChromeClient&lt;/code&gt;,&lt;code&gt;WebViewClient&lt;/code&gt;的设置：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; WebChromeClient &lt;span class=&quot;title&quot;&gt;onCreateWebChromeClient&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BaseWebChromeClient(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; WebViewClient &lt;span class=&quot;title&quot;&gt;onCreateWebViewClient&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BaseWebViewClient(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，要关注WebView可能存在内存泄露的问题，所以在Fragment的生命周期中针对WebView做相应操作，避免内存泄露问题&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onResume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mWebView != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mWebView.onResume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onPause();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mWebView != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mWebView.onPause();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onDestroy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mWebView != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ((ViewGroup) mWebView.getParent()).removeView(mWebView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mWebView.destroy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mWebView = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作为实现类必须实现以下两个函数，分别用于提供一个layout和一个下拉刷新的监听&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loadLayoutRes&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getWebViewId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-5-OpenWebFragment-java&quot;&gt;&lt;a href=&quot;#3-5-OpenWebFragment-java&quot; class=&quot;headerlink&quot; title=&quot;3.5 OpenWebFragment.java&quot;&gt;&lt;/a&gt;3.5 OpenWebFragment.java&lt;/h2&gt;&lt;p&gt;BaseWebFragment的子类，主要具体实现H5加载的业务逻辑。&lt;/p&gt;
&lt;p&gt;其中，覆写&lt;code&gt;onInitWebViewSettings&lt;/code&gt;方法，初始化&lt;code&gt;mBaseEvent&lt;/code&gt;以及添加JavascriptInterface支持&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onInitWebViewSettings&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onInitWebViewSettings();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebFragmentHandler(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mWebEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OpenWebEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mActivity, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mHandler, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebUrl() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getCurrentUrl&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mWebView.getUrl();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mWebView.addJavascriptInterface(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mWebEvent, &lt;span class=&quot;string&quot;&gt;&quot;MyJsBridge&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;当前越来越多的app中嵌入H5，想跟大家分享一下具体在项目中的使用和设计，故写了这个&lt;a href=&quot;https://github.com/Solartisan/OpenWeb&quot;&gt;开源项目&lt;/a&gt;，欢迎大家批评指正。&lt;/p&gt;
&lt;p&gt;在这里介绍一下OpenWeb项目基础的框架设计。&lt;/p&gt;
&lt;h1 id=&quot;1-功能介绍&quot;&gt;&lt;a href=&quot;#1-功能介绍&quot; class=&quot;headerlink&quot; title=&quot;1.功能介绍&quot;&gt;&lt;/a&gt;1.功能介绍&lt;/h1&gt;&lt;p&gt;基于WebView设计的H5页面的加载框架，可以自动管理回退栈，可以支持js与native的交互，可配合下拉刷新控件，可修改横向进度条。&lt;/p&gt;
&lt;h1 id=&quot;2-设计&quot;&gt;&lt;a href=&quot;#2-设计&quot; class=&quot;headerlink&quot; title=&quot;2.设计&quot;&gt;&lt;/a&gt;2.设计&lt;/h1&gt;&lt;img src=&quot;/images/open_web.png&quot;&gt;
    
    </summary>
    
      <category term="Android" scheme="http://solart.cc/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://solart.cc/2016/02/20/hello-world/"/>
    <id>http://solart.cc/2016/02/20/hello-world/</id>
    <published>2016-02-20T02:08:22.000Z</published>
    <updated>2016-05-01T04:18:02.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://solart.cc/&quot;&gt;Solart&lt;/a&gt;! &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个博客主要是为了贡献高质量的技术分析及开源项目，目前主要深耕移动端Android方向。欢迎更多的朋友加入我们!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Github &lt;a href=&quot;https://github.com/solartisan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Solartisan&lt;/a&gt;&lt;/p&gt;
&lt;img src=&quot;/images/clock.jpg&quot; width=&quot;640&quot; height=&quot;480&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://solart.cc/&quot;&gt;Solart&lt;/a&gt;! &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个博客主要是为了贡献高质量的技术分析及开源项目，目前主要深耕移动端Android方向。欢迎更多的朋友加入我们!&lt;/p&gt;
&lt;/bl
    
    </summary>
    
    
  </entry>
  
</feed>
